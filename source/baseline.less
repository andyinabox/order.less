//! order.less v0.5.0 | Apache License, Version 2.0 | github.com/chromice/order.less

// = = = = = = = =
// baseline.less =
// = = = = = = = =

.use-baseline (@size, @height, @offset: 0.85) when (ispixel(@size)) {
	.use-baseline(@size, @height, @offset, @size, @height, @offset);
}
.use-baseline (@size, @height, @offset, @alt-size, @alt-height, @alt-offset) when (ispixel(@size)) and (ispixel(@alt-size)) {
	
	// Main baseline values
	@baseline-size: @size;
	@baseline-height: @height;
	@baseline-offset: @offset;
	
	// Adjusted baseline values
	@current-size: @alt-size;
	@current-height: @alt-height;
	@current-offset: @alt-offset;
	
	@-diff-height: (@baseline-height * @baseline-size - @current-height * @current-size);
	@-diff-font-size: (@current-size * (@current-offset - 0.5) - @baseline-size * (@baseline-offset - 0.5));
	
	// Calculated top and bottom baseline offsets
	@offset-top: (unit(mod(@-diff-height / 2 - @-diff-font-size, @baseline-size * @baseline-height) / @baseline-size, rem));
	@offset-bottom: (unit(mod(@-diff-height, @baseline-size * @baseline-height) / @baseline-size, rem));
	
	// Set a new baseline
	.set-baseline (@-size, @-height: @baseline-height, @-offset: @baseline-offset) {
		.use-baseline(@baseline-size, @baseline-height, @baseline-offset, @-size, @-height, @-offset);
	}
	
	// Reset baseline to default values
	.reset-baseline () {
		.use-baseline(@baseline-size, @baseline-height, @baseline-offset);
	}
	
	// Shift text to the main baseline
	.align-baseline () {
		position: relative;
		top: @offset-top;
	}
	.align-baseline (@-size, @-height: @baseline-height, @-offset: @baseline-offset) {
		.set-baseline(@-size, @-height, @-offset);
		.align-baseline();
	}
	
	// Set font size and line height
	.resize-baseline () {
		font-size: @current-size;
		font-size: unit((@current-size / @baseline-size), rem);
		line-height: @current-height;
	}
	.resize-baseline (@-size, @-height: @baseline-height, @-offset: @baseline-offset) {
		.set-baseline(@-size, @-height, @-offset);
		.resize-baseline();
	}
	
	// Adjust alignment, font size and line height
	.adjust-baseline () {
		.align-baseline();
		.resize-baseline();
	}
	.adjust-baseline (@-size, @-height: @baseline-height, @-offset: @baseline-offset) {
		.set-baseline(@-size, @-height, @-offset);
		.adjust-baseline();
	}
	
	// Baseline height
	.height (@span, @nudge: 0) {
		.-baseline-property(height, @span, @nudge);
	}
	.min-height (@span, @nudge: 0) {
		.-baseline-property(min-height, @span, @nudge);
	}
	.max-height (@span, @nudge: 0) {
		.-baseline-property(max-height, @span, @nudge);
	}
	
	// Baseline offset
	.top (@span, @nudge: 0) when (@nudge = 0) {
		.-baseline-property(top, @span, @offset-top);
	}
	.top (@span, @nudge: 0) when (default()) {
		.-baseline-property(top, @span, @nudge ~"+" @offset-top);
	}
	.bottom (@span, @nudge: 0) when (@nudge = 0) {
		.-baseline-property(bottom, @span, (@offset-top * -1));
	}
	.bottom (@span, @nudge) when (default()) {
		.-baseline-property(bottom, @span, @nudge ~"-" @offset-top);
	}
	
	// Baseline padding
	.padding-top (@span, @nudge: 0) {
		.-baseline-property(padding-top, @span, @nudge);
	}
	.padding-bottom (@span, @nudge: 0) {
		.-baseline-property(padding-bottom, @span, @nudge);
	}
	
	// Baseline margin
	.margin-top (@span, @nudge: 0) {
		.-baseline-property(margin-top, @span, @nudge);
	}
	.margin-bottom (@span, @nudge: 0) when (@nudge = 0) {
		.-baseline-property(margin-bottom, @span, @offset-bottom);
	}
	.margin-bottom (@span, @nudge) when (default()) {
		.-baseline-property(margin-bottom, @span, @nudge ~"+" @offset-bottom);
	}
	
	// Set property values
	.-baseline-property (@property, @span, @nudge: 0) when not(@span = 0) and (@nudge = 0) {
		.get-baseline-height(@span);
		
		@{property}: @baseline-height-px;
		@{property}: @baseline-height-rem;
	}
	.-baseline-property (@property, @span, @nudge: 0) when (@span = 0) and (@nudge = 0) {
		@{property}: 0;
	}
	.-baseline-property (@property, @span, @nudge: 0) when (default()) {
		.get-baseline-height(@span);
		
		@{property}: @baseline-height-px;
		@{property}: -webkit-calc(@baseline-height-rem ~"+" @nudge);
		@{property}: calc(@baseline-height-rem ~"+" @nudge);
	}
	
	// Calculate baseline values
	.get-baseline-height (@span, @base: @baseline-size) {
		@-height-px-value: unit((@span * @baseline-size * @baseline-height));
		@-height-rem-value: unit((@span * @baseline-height));
		@baseline-height-px: ~"@{-height-px-value}px";
		@baseline-height-rem: ~"@{-height-rem-value}rem";
	}
}

// Add scale support to baseline mixins
.use-baseline (@-step, @-height, @-offset: 0.85) when not(ispixel(@-step)) {
	.get-scale-size(@-step);
	.use-baseline(@scale-size, @-height, @-offset);
}
.use-baseline (@-size, @-height, @-offset, @-alt-step, @-alt-height, @-alt-offset) when (ispixel(@-size)) and not(ispixel(@-alt-step)) {
	.get-scale-size(@-alt-step);
	.use-baseline(@-size, @-height, @-offset, @scale-size, @-alt-height, @-alt-offset);
}
